#!/bin/bash

# Script para obtener y configurar webhooks de Render y Vercel
# PPIV - GitHub Actions + Render + Vercel

echo "üîó Obteniendo Webhooks para Deploy Autom√°tico"
echo "=============================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar mensajes
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

print_note() {
    echo -e "${CYAN}[NOTE]${NC} $1"
}

# Verificar si estamos en el directorio correcto
if [ ! -f "docker-compose.yml" ]; then
    print_error "Este script debe ejecutarse desde el directorio ra√≠z del proyecto"
    exit 1
fi

echo ""
print_step "PASO 1: Obtener Webhook de Render (Backend)"
echo "------------------------------------------------"

echo "1. Ve a https://dashboard.render.com"
echo "2. Inicia sesi√≥n con tu cuenta"
echo "3. Selecciona tu servicio de backend"
echo "4. Ve a Settings ‚Üí Build & Deploy"
echo "5. Busca la secci√≥n 'Webhook URL'"
echo "6. Copia la URL completa"

echo ""
read -p "¬øYa tienes la URL del webhook de Render? (s/n): " has_render_webhook

if [[ $has_render_webhook =~ ^[Ss]$ ]]; then
    read -p "Pega la URL del webhook de Render: " render_webhook_url
    echo ""
    print_success "Webhook de Render guardado:"
    echo "  $render_webhook_url"
else
    print_warning "No se configur√≥ el webhook de Render"
    render_webhook_url=""
fi

echo ""
print_step "PASO 2: Obtener Deploy Hook de Vercel (Frontend) - PLAN GRATUITO"
echo "----------------------------------------------------------------------"

echo "üìù IMPORTANTE: En Vercel, los webhooks avanzados requieren plan de pago."
echo "   Para el plan gratuito, usamos 'Deploy Hooks' que son completamente gratuitos."
echo ""

echo "1. Ve a https://vercel.com/dashboard"
echo "2. Inicia sesi√≥n con tu cuenta"
echo "3. Selecciona tu proyecto frontend"
echo "4. Ve a Settings ‚Üí Git ‚Üí Deploy Hooks"
echo "5. Haz clic en 'Create Hook'"
echo "6. Completa el formulario:"
echo "   - Name: GitHub Actions Deploy"
echo "   - Branch: main"
echo "   - Framework Preset: Vite"
echo "7. Copia la URL que se genera"

echo ""
read -p "¬øYa tienes la URL del Deploy Hook de Vercel? (s/n): " has_vercel_hook

if [[ $has_vercel_hook =~ ^[Ss]$ ]]; then
    read -p "Pega la URL del Deploy Hook de Vercel: " vercel_deploy_hook_url
    echo ""
    print_success "Deploy Hook de Vercel guardado:"
    echo "  $vercel_deploy_hook_url"
else
    print_warning "No se configur√≥ el Deploy Hook de Vercel"
    vercel_deploy_hook_url=""
fi

echo ""
print_step "PASO 3: Configurar Secrets en GitHub"
echo "------------------------------------------"

echo "1. Ve a tu repositorio en GitHub"
echo "2. Haz clic en Settings"
echo "3. En el men√∫ lateral, busca 'Secrets and variables'"
echo "4. Haz clic en 'Actions'"
echo "5. Haz clic en 'New repository secret'"

if [[ -n "$render_webhook_url" ]]; then
    echo ""
    print_note "Para Render:"
    echo "  - Name: RENDER_WEBHOOK_URL"
    echo "  - Value: $render_webhook_url"
fi

if [[ -n "$vercel_deploy_hook_url" ]]; then
    echo ""
    print_note "Para Vercel (Plan Gratuito):"
    echo "  - Name: VERCEL_DEPLOY_HOOK_URL"
    echo "  - Value: $vercel_deploy_hook_url"
fi

echo ""
read -p "¬øYa configuraste los secrets en GitHub? (s/n): " secrets_configured

if [[ $secrets_configured =~ ^[Ss]$ ]]; then
    print_success "¬°Perfecto! Los secrets est√°n configurados"
else
    print_warning "Recuerda configurar los secrets antes de continuar"
fi

echo ""
print_step "PASO 4: Probar los Webhooks"
echo "--------------------------------"

if [[ -n "$render_webhook_url" ]]; then
    echo ""
    read -p "¬øQuieres probar el webhook de Render ahora? (s/n): " test_render
    
    if [[ $test_render =~ ^[Ss]$ ]]; then
        print_status "Probando webhook de Render..."
        response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$render_webhook_url")
        
        if [[ $response == "200" ]]; then
            print_success "Webhook de Render funcion√≥ correctamente (HTTP $response)"
        else
            print_warning "Webhook de Render devolvi√≥ HTTP $response"
        fi
    fi
fi

if [[ -n "$vercel_deploy_hook_url" ]]; then
    echo ""
    read -p "¬øQuieres probar el Deploy Hook de Vercel ahora? (s/n): " test_vercel
    
    if [[ $test_vercel =~ ^[Ss]$ ]]; then
        print_status "Probando Deploy Hook de Vercel..."
        response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$vercel_deploy_hook_url")
        
        if [[ $response == "200" ]]; then
            print_success "Deploy Hook de Vercel funcion√≥ correctamente (HTTP $response)"
        else
            print_warning "Deploy Hook de Vercel devolvi√≥ HTTP $response"
        fi
    fi
fi

echo ""
print_step "PASO 5: Verificar Configuraci√≥n"
echo "------------------------------------"

echo "Para verificar que todo est√© configurado correctamente:"
echo ""
echo "1. Ve a la pesta√±a 'Actions' en tu repositorio de GitHub"
echo "2. Busca el workflow 'Deploy Webhooks - PPIV'"
echo "3. Haz clic en 'Run workflow'"
echo "4. Revisa los logs para ver el estado de los webhooks:"
echo ""
echo "   üìù Deployment Method Status:"
echo "     - Render Webhook: ‚úÖ Configured (o ‚ö†Ô∏è Not configured)"
echo "     - Vercel Deploy Hook: ‚úÖ Configured (Free Plan) (o ‚ö†Ô∏è Not configured)"

echo ""
print_success "¬°Configuraci√≥n de webhooks completada!"
echo ""
echo "üìã Resumen:"
if [[ -n "$render_webhook_url" ]]; then
    echo "  ‚úÖ Render Webhook: Configurado"
else
    echo "  ‚ö†Ô∏è  Render Webhook: No configurado (usar√° auto-deploy)"
fi

if [[ -n "$vercel_deploy_hook_url" ]]; then
    echo "  ‚úÖ Vercel Deploy Hook: Configurado (Plan Gratuito)"
else
    echo "  ‚ö†Ô∏è  Vercel Deploy Hook: No configurado (usar√° auto-deploy)"
fi

echo ""
echo "üí° Informaci√≥n sobre Vercel:"
echo "  - Deploy Hooks: ‚úÖ Gratuitos (lo que acabamos de configurar)"
echo "  - Webhooks Avanzados: üí∞ Requieren plan de pago"
echo "  - Auto-Deploy: ‚úÖ Siempre disponible"
echo ""
echo "üöÄ Pr√≥ximos pasos:"
echo "1. Haz push a main para probar el deploy autom√°tico"
echo "2. Revisa los logs en GitHub Actions"
echo "3. Verifica que las aplicaciones se desplieguen correctamente"
echo ""
echo "üìö Documentaci√≥n completa en: docs/webhooks-setup.md" 